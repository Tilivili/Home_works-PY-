# Задача №39. Решение в группах
# Даны два массива чисел. Требуется вывести те элементы
# первого массива (в том порядке, в каком они идут в первом
# массиве), которых нет во втором массиве. Пользователь вводит
# число N - количество элементов в первом массиве, затем N
# чисел - элементы массива. Затем число M - количество
# элементов во втором массиве. Затем элементы второго массива

# a = list()
# b = list()
# n = int(input("Введите длину множества a: "))
# m = int(input("Введите длину множества b: "))
# for i in range(n):
#     x = int(input("Введите число из множества a: "))
#     a.append(x)
# for i in range(m):
#     y = int(input("Введите число из множества b: "))
#     b.append(y)
# c = list()
# for i in a:
#     if i not in b:
#         c.append(i)
#         i += 1
# print(c)

# n = int(input("Введите кол-во элементов 1-ого списка: "))
# first_list = [int(i) for i in input("Введите значения 1-ого списка: ").split()[:n]]
# m = int(input("Введите кол-во элементов 2-ого списка: "))
# second_list = [int(i) for i in input("Введите значения 2-ого списка: ").split()[:m]]
# print(*[i for i in first_list if i not in second_list])

# Задача №41. Решение в группах
# Дан массив, состоящий из целых чисел. Напишите
# программу, которая в данном массиве определит
# количество элементов, у которых два соседних и, при
# этом, оба соседних элемента меньше данного. Сначала
# вводится число N — количество элементов в массиве
# Далее записаны N чисел — элементы массива. Массив
# состоит из целых чисел.

# n = int(input("Введите кол-во элементов списка: "))
# first_list = [int(i) for i in input("Введите значения списка: ").split()[:n]]
# # 12 35 8 9 1
# print(sum([first_list[i - 1] < first_list[i] > first_list[i + 1]
#            for i in range(1, n - 1)]))

# Задача №43. Решение в группах
# Дан список чисел. Посчитайте, сколько в нем пар
# элементов, равных друг другу. Считается, что любые
# два элемента, равные друг другу образуют одну пару,
# которую необходимо посчитать. Вводится список
# чисел. Все числа списка находятся на разных
# строках.
 
# numbers = [int(i) for i in input("Введите числа: ").split()]
# count_numbers = {}
# for i in numbers:
#     if i not in count_numbers:
#         count_numbers[i] = 1
#     else:
#         count_numbers[i] += 1
# print(count_numbers)
# print(sum([i // 2 for i in count_numbers.values()]))

# Задача №45. Решение в группах
# Два различных натуральных числа n и m называются
# дружественными, если сумма делителей числа n
# (включая 1, но исключая само n) равна числу m и
# наоборот. Например, 220 и 284 – дружественные числа.
# По данному числу k выведите все пары дружественных
# чисел, каждое из которых не превосходит k. Программа
# получает на вход одно натуральное число k, не
# превосходящее 105
# . Программа должна вывести все
# пары дружественных чисел, каждое из которых не
# превосходит k. Пары необходимо выводить по одной в
# строке, разделяя пробелами. Каждая пара должна быть
# выведена только один раз (перестановка чисел новую
# пару не дает).

# n = int(input("Input number: "))
# data = {}
# for i in range(2, n + 1):
#     summa = 1
#     for j in range(2, i // 2 + 1):
#         if i % j == 0:
#             summa += j
#     data[i] = summa
# print_list = list()
# for k, v in data.items():
#     if v in data.keys() and k in data.values() and k != v and data[v] == k and data[k] == v\
#             and (k, v) not in print_list:
#         print(k, v)
#         print_list.append((v, k))




