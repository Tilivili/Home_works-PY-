# Задача №31. Решение в группах
# Последовательностью Фибоначчи называется
# последовательность чисел a0
# , a1
# , ..., an
# , ..., где
# a0
#  = 0, a1
#  = 1, ak
#  = ak-1 + ak-2 (k > 1).
# Требуется найти N-е число Фибоначчи

# def fib(n):
#     if n in (0,1): 
#         return n
#     return fib(n-1) + fib(n-2)
# print(fib(int(input("input fib number: "))))

# n = int(input("input fib number: "))
# a0, a1=0, 1
# for i in range(n):
#     a_next = a0 + a1
#     a0 = a1
#     a1 = a_next
# print(a0)

# Задача №33. Решение в группах
# Хакер Василий получил доступ к классному журналу и
# хочет заменить все свои минимальные оценки на
# максимальные. Напишите программу, которая
# заменяет оценки Василия, но наоборот: все
# максимальные – на минимальные.

# n = int(input("input count markc: "))
# marks = [int(i) for i in input("input marks:").split()[:n]]
# print([min(marks) if i == max(marks) else i for i in marks])

# Задача №35. Решение в группах
# Напишите функцию, которая принимает одно число и
# проверяет, является ли оно простым
# Напоминание: Простое число - это число, которое
# имеет 2 делителя: 1 и n(само число)

# def is_prime(n):
#     for i in range(2, int(n ** 0.5) + 1):
#         if n % i == 0:
#             return False
#     return True
# print('yes' if is_prime(int(input("Input number: "))) else 'no')

# Задача №37. Решение в группах
# Дано натуральное число N и
# последовательность из N элементов.
# Требуется вывести эту последовательность в
# обратном порядке.
# Примечание. В программе запрещается
# объявлять массивы и использовать циклы
# (даже для ввода и вывода)

# def rec(n):
#     if n == 0:
#         return ''
#     x = int(input("Введите число: "))
#     return rec(n - 1) + f' {x}'
# n = int(input("Введите кол-во чисел: "))
# print(rec(n))







